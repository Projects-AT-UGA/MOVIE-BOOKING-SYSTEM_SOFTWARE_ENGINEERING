# Generated by Django 5.0.2 on 2024-02-28 01:09

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MovieCategory',
            fields=[
                ('category', models.CharField(choices=[('G', 'General audience'), ('M', 'Mature audience'), ('R', 'Restricted audience'), ('X', 'No one under 18')], default='U', max_length=50, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('code', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('amount', models.IntegerField(default=10)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('promotions', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('ratings', models.DecimalField(decimal_places=1, default=0.0, max_digits=3)),
                ('title', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('cast', models.CharField(default='Unkown', max_length=100)),
                ('synopsis', models.CharField(default='None', max_length=500)),
                ('rating', models.CharField(blank=True, max_length=5)),
                ('playing_now', models.BooleanField(default=False)),
                ('trailer_picture', models.URLField(default='https://static.vecteezy.com/system/resources/thumbnails/001/623/833/original/movie-trailer-coming-soon-background-video.jpg', max_length=300)),
                ('release_date', models.DateField(blank=True, default=django.utils.timezone.now)),
                ('genre', models.CharField(blank=True, max_length=10)),
                ('trailer_video', models.URLField(blank=True, max_length=250)),
                ('director', models.CharField(blank=True, default='', max_length=100)),
                ('producer', models.CharField(blank=True, default='', max_length=100)),
                ('duration', models.CharField(blank=True, default='03H00M', max_length=6, null=True)),
                ('certificate', models.ForeignKey(default='G', on_delete=django.db.models.deletion.CASCADE, to='movie_booking.moviecategory')),
            ],
        ),
    ]
